name: CI/CD Pipeline for Node.js App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Node.js App to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build artifacts
      run: zip -r build.zip . -x "*.git*"

    - name: Upload build to S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --exact-timestamps
      env:
        AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SOURCE_DIR: "./"
        DEST_DIR: "artifacts/${{ github.sha }}"

    - name: Create SSH key
      run: |
        echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
        chmod 600 ec2_key.pem

    - name: Deploy to EC2
      run: |
        scp -i ec2_key.pem -o StrictHostKeyChecking=no build.zip ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          unzip -o build.zip -d app
          cd app
          npm install
          pm2 restart all || pm2 start index.js --name course-institute
        EOF

    - name: Notify Slack - Success
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: success
        fields: repo,message,commit,author,job
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Notify Slack - Failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        fields: repo,message,commit,author,job
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
